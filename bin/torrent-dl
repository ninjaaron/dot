#!/usr/bin/env eggshell
shimport ssh, sftp
from collections import namedtuple
import re
import argparse

Torrent = namedtuple('Torrent',
                     'id, perc, have, eta, up, down, ratio, status, name')


def main():
    ap = argparse.ArgumentParser()
    add = ap.add_argument
    add('targets', nargs='+')
    add('-s', help='server address')
    add('-r', action='store_true', help='delete torrent after downloading')
    add('--ext', help='grab only this file extention')

    args = ap.parse_args()

    gap = re.compile(' {2,}')
    command = 'ssh sink transmission-remote -l'
    torrents = [gap.split(t.strip()) for t in
                (ssh sink transmission-remote -l)][1:-1]
    for n, t in enumerate(torrents):
        torrents[n][8:] = ['  '.join(t[8:])]
    torrents = (Torrent(*t) for t in torrents)
    try:
        int(args.targets[0])
    except ValueError:
        pat = re.compile('(?i)' + args.targets[0])
        matches = (t for t in torrents
                   if pat.search(t.name) and t.perc == '100%')
    else:
        matches = (t for t in torrents if t.id.strip('*') in args.targets)
    for torrent in matches:
        filename = args.s + ":dls/'" + torrent.name + "'"
        if args.ext:
            filename += "/*" + ext
        sftp -ar (filename) .
        if args.r:
            ssh (args.s) transmission-remote -t \
                    (torrent.id.strip('*')) --remove-and-delete


if __name__ == '__main__':
    main()

# vim: ft=python
