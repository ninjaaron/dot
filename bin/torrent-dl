#!/usr/bin/env eggshell
shimport ssh, sftp
from collections import namedtuple
import re
import argparse
import shlex

Torrent = namedtuple('Torrent',
                     'id, perc, have, eta, up, down, ratio, status, name')


def main():
    ap = argparse.ArgumentParser()
    add = ap.add_argument
    add('targets', nargs='+')
    add('-s', help='server address')
    add('-r', action='store_true', help='delete torrent after downloading')
    add('--ext', help='grab only this file extention')

    args = ap.parse_args()

    gap = re.compile(' {2,}')

    torrents = [Torrent(*gap.split(t.strip(), 8)) for t in
                list(ssh (args.s) transmission-remote -l)[1:-1]]

    try:
        int(args.targets[0])
    except ValueError:
        pat = re.compile('(?i)' + args.targets[0])
        matches = (t for t in torrents
                   if pat.search(t.name) and t.perc == '100%')
    else:
        matches = (t for t in torrents if t.id.strip('*') in args.targets)
    for torrent in matches:
        filename = args.s + ":dls/" + shlex.quote(torrent.name)
        if args.ext:
            filename += "/*" + ext

        sftp -ar (filename) .
        if args.r:
            ssh (args.s) transmission-remote -t \
                    (torrent.id.strip('*')) --remove-and-delete


if __name__ == '__main__':
    main()

# vim: ft=python
