#!/usr/bin/env python3
import os, sys
import sqlite3
import easyproc as ep

PATH = os.environ['PATH'].split(':')
HOME = os.environ['HOME']
HOMEPATHS = [HOME+'/'+i for i in os.listdir(HOME) if not i.startswith('.')]
try:
    DMENU = ep.grab('source ~/.dmenurc; echo "$DMENU"', shell=True)[0]
except ep.CalledProcessError:
    DMENU = 'dmenu'

db = sqlite3.connect(HOME + '/.config/dmaster.db')
cur = db.cursor()
dbex = cur.execute


def dmenu(items, listed=False, prompt=''):
    dm = DMENU
    if listed:
        dm += ' -l 30'
    if prompt:
        dm += ' -p ' + prompt
    try:
        return ep.grab(dm, input='\n'.join(items))[0]
    except ep.CalledProcessError:
        db.commit()
        exit()


def run():
    commands = ['.']
    dbex('CREATE TABLE IF NOT EXISTS commands(cmd TEXT, time TEXT)')
    dbex('SELECT cmd FROM commands ORDER BY time DESC')
    commands.extend(cmd[0] for cmd in cur.fetchall())

    for pathdir in PATH:
        commands.extend(os.listdir(pathdir))

    cmd = dmenu(commands)

    if cmd == '.':
        browse()
    else:
        ep.Popen(cmd)
        dbex('DELETE FROM commands WHERE cmd = ?', (cmd,))
        dbex('INSERT INTO commands VALUES(?, datetime("now"))', (cmd,))
    db.commit()


def browse(path='.'):
    paths = [path for path in sorted(os.listdir()) if not path.startswith('.')]
    try:
        dbex('SELECT name, path FROM dirs ORDER BY time DESC')
    except sqlite3.OperationalError:
        pass
    else:
        paths.extend('    '.join(dir) for dir in cur.fetchall())
    path = dmenu(paths, listed=True)
    path = path.split('    ')[1] if '    ' in path else path
    hidden = False

    while os.path.isdir(path):
        os.chdir(path)
        path = os.getcwd()
        if not path in HOMEPATHS + ['/', HOME]:
            add_path(path)
        items = os.listdir()
        items = [i for i in items if not i[0] == '.'] if not hidden else items
        items.extend(['..', '~', 'hidden)', 'term)'])
        path = dmenu(items, listed=True)
        if path == '~':
            path = HOME
        elif path == 'hidden)':
            path = '.'
            hidden = False if hidden else True
        elif path == 'term)':
            ep.Popen('urxvtc')
            exit()

    add_path(path) if path.startswith('/') else add_path(os.getcwd()+'/'+path)


def add_path(path):
    table = 'dirs' if os.path.isdir(path) else 'files'
    name = os.path.basename(path)
    dbex('''CREATE TABLE IF NOT EXISTS
            %s(path TEXT, name TEXT, time TEXT)''' % table)
    dbex('DELETE FROM %s WHERE path = ?' % table, (path,))
    dbex('INSERT INTO %s VALUES(?, ?, datetime("now"))' % table, (path, name))


if __name__ == '__main__':
    run()
